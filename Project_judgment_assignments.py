import numpy as np

names = ['D. Byrne','S.Gozdzialski','K. Mendonsa','S. Cocke','J.Villanueva','D. Serna','S. Loftin','P. Leon','P. Flaming','C. Graves','Q.Nixon','D.Stroud','Y. S. Kunwar','S. Chew','J. Lancon	','V. Viswanathan','S. Samuel','A. Mohan','A. Subramanian','M. Ahluwalia','I. Bakhtiar','M. Kuklani','M. Hightower','B. Houssaye ','A. Veluchamy','S. Milett','N. Wall','K. Thomas','C. Martinez','S. Gu','K. Dickens','J. Heinen','K. Okiah','M. Palanisamy','N. Brown','L. Sterling','A. Siddiqui','D. Davieau','C. Morgan','L. Cheng','B. Yu','E. Carrera','M. Toolin','M. Rega','J. Lingle','B. Kimbark','R. Bss','R. Simhambhatla','J. Kassof','T. Prasad','N. Rezsonya','M. Shubbar','G. Lane','M. Luzardo','A. Nelson','B. Benefield','J. Flores','A. Schams','J. Knowles','A. Shen','M. Shahini','J. Lubich','M. Pednekar','R. Nagarajan','M. Shulyk','J. Lin','J. Marin','S. Fite','V. Ahir','A. Saxena','R. Talk','T. Deason','C. Kim','T. Pompo','L. Dajani','D. Geislinger']

num_names = len(names)


for x in range(250):
  test = np.random.randint(num_names, size=(2,x))
  print(x, num_names == len(set(test[0]).union(set(test[1]))))


x = 0 
test = np.random.randint(num_names, size=(2,76))
while (num_names != len(set(test[0]).union(set(test[1])))):
  test = np.random.randint(num_names, size=(2,x))
  x+=1

pairs = [(names[x[0]],names[x[1]]) for x in list(zip(*test))]


class_a = ['Adur Kannan, Bhuvana','Au, Jackson','Byrd, Peter','Daggubati, Sita','Gill, Zackary','Hayden, Steven','Jiang, Lei','Kodi, Ganesh','Merritt, Stephen','Mylapore, Satish','Rollins, Kristen','Saldana, Javier','Spanswick, Benjamin','Tanyuk, Olga','Vasquez, James','Wilke, Benjamin','Wittlin, Nicole','Yi, Joshua']


class_b = ['Coari, Brian','Drake, Carson','Ekedum, Johnson','Garcia, Martin','Garcia de Alford, Solange','Gipson, Johnny','Gupta, Nikhil','Ho, Andy','Hu, Chaoshun','Josephs, David','Ludlow, Meredith','Moro, Max','Pafford, Jodi','Panek, Paul','Sprague, Samantha','Trevino, William','Wilkins, Andrew','Yeboah, Festus Kwadwo','Zaheri, Sara']

# class_a

class_a_pairups = zip(cycle(class_a), pairs)

for x in class_a: 
  for y in class_a_pairups:
    if x==y[0]:
      print(y)


#('Adur Kannan, Bhuvana', ('A. Mohan', 'S. Chew'))
#('Adur Kannan, Bhuvana', ('A. Saxena', 'D. Byrne'))
#('Adur Kannan, Bhuvana', ('D. Davieau', 'J. Lancon    '))
#('Adur Kannan, Bhuvana', ('M. Kuklani', 'L. Cheng'))
#('Adur Kannan, Bhuvana', ('M. Luzardo', 'A. Veluchamy'))
#('Adur Kannan, Bhuvana', ('M. Shubbar', 'J. Kassof'))
#('Adur Kannan, Bhuvana', ('D. Serna', 'D. Davieau'))
#('Au, Jackson', ('K. Mendonsa', 'P. Leon'))
#('Au, Jackson', ('M. Hightower', 'V. Ahir'))
#('Au, Jackson', ('M. Shubbar', 'K. Thomas'))
#('Au, Jackson', ('V. Ahir', 'K. Okiah'))
#('Au, Jackson', ('V. Viswanathan', 'J. Lancon    '))
#('Au, Jackson', ('S. Chew', 'A. Mohan'))
#('Au, Jackson', ('J. Lancon    ', 'J. Marin'))
#('Byrd, Peter', ('G. Lane', 'D. Serna'))
#('Byrd, Peter', ('A. Schams', 'A. Siddiqui'))
#('Byrd, Peter', ('J. Knowles', 'A. Shen'))
#('Byrd, Peter', ('J. Kassof', 'M. Shubbar'))
#('Byrd, Peter', ('M. Ahluwalia', 'A. Mohan'))
#('Byrd, Peter', ('L. Cheng', 'A. Veluchamy'))
#('Byrd, Peter', ('A. Nelson', 'A. Siddiqui'))
#('Daggubati, Sita', ('T. Pompo', 'M. Ahluwalia'))
#('Daggubati, Sita', ('C. Kim', 'J. Heinen'))
#('Daggubati, Sita', ('M. Toolin', 'S. Milett'))
#('Daggubati, Sita', ('G. Lane', 'M. Palanisamy'))
#('Daggubati, Sita', ('T. Deason', 'M. Ahluwalia'))
#('Daggubati, Sita', ('D. Serna', 'C. Kim'))
#('Daggubati, Sita', ('D. Byrne', 'S. Chew'))
#('Gill, Zackary', ('K. Mendonsa', 'M. Shulyk'))
#('Gill, Zackary', ('D.Stroud', 'J. Lingle'))
#('Gill, Zackary', ('C. Morgan', 'S. Samuel'))
#('Gill, Zackary', ('J. Lin', 'C. Kim'))
#('Gill, Zackary', ('J. Lingle', 'C. Kim'))
#('Gill, Zackary', ('D. Byrne', 'M. Kuklani'))
#('Gill, Zackary', ('J. Lin', 'N. Rezsonya'))
#('Hayden, Steven', ('N. Brown', 'J. Lancon    '))
#('Hayden, Steven', ('J. Marin', 'A. Shen'))
#('Hayden, Steven', ('T. Pompo', 'A. Siddiqui'))
#('Hayden, Steven', ('D. Byrne', 'T. Deason'))
#('Hayden, Steven', ('C. Graves', 'C. Kim'))
#('Hayden, Steven', ('D. Davieau', 'Q.Nixon'))
#('Hayden, Steven', ('A. Schams', 'M. Shubbar'))
#('Jiang, Lei', ('D. Serna', 'R. Bss'))
#('Jiang, Lei', ('B. Kimbark', 'M. Shulyk'))
#('Jiang, Lei', ('I. Bakhtiar', 'I. Bakhtiar'))
#('Jiang, Lei', ('T. Prasad', 'T. Prasad'))
#('Jiang, Lei', ('R. Nagarajan', 'M. Luzardo'))
#('Jiang, Lei', ('A. Saxena', 'V. Viswanathan'))
#('Kodi, Ganesh', ('R. Talk', 'N. Brown'))
#('Kodi, Ganesh', ('A. Subramanian', 'N. Rezsonya'))
#('Kodi, Ganesh', ('A. Subramanian', 'R. Nagarajan'))
#('Kodi, Ganesh', ('J. Marin', 'M. Pednekar'))
#('Kodi, Ganesh', ('K. Mendonsa', 'B. Benefield'))
#('Kodi, Ganesh', ('D. Byrne', 'M. Shubbar'))
#('Merritt, Stephen', ('M. Pednekar', 'A. Mohan'))
#('Merritt, Stephen', ('A. Shen', 'S. Gu'))
#('Merritt, Stephen', ('L. Dajani', 'D. Byrne'))
#('Merritt, Stephen', ('S.Gozdzialski', 'J. Marin'))
#('Merritt, Stephen', ('C. Graves', 'M. Palanisamy'))
#('Merritt, Stephen', ('A. Saxena', 'J. Lancon    '))
#('Mylapore, Satish', ('S.Gozdzialski', 'A. Nelson'))
#('Mylapore, Satish', ('S. Chew', 'P. Leon'))
#('Mylapore, Satish', ('T. Prasad', 'A. Siddiqui'))
#('Mylapore, Satish', ('T. Prasad', 'R. Simhambhatla'))
#('Mylapore, Satish', ('P. Flaming', 'N. Brown'))
#('Mylapore, Satish', ('P. Flaming', 'B. Kimbark'))
#('Rollins, Kristen', ('D.Stroud', 'D. Byrne'))
#('Rollins, Kristen', ('K. Mendonsa', 'R. Talk'))
#('Rollins, Kristen', ('M. Toolin', 'B. Yu'))
#('Rollins, Kristen', ('S. Cocke', 'C. Martinez'))
#('Rollins, Kristen', ('J. Flores', 'J. Flores'))
#('Rollins, Kristen', ('A. Veluchamy', 'P. Leon'))
#('Saldana, Javier', ('A. Nelson', 'M. Luzardo'))
#('Saldana, Javier', ('P. Leon', 'Q.Nixon'))
#('Saldana, Javier', ('M. Kuklani', 'M. Shulyk'))
#('Saldana, Javier', ('J. Kassof', 'N. Wall'))
#('Saldana, Javier', ('M. Pednekar', 'V. Ahir'))
#('Saldana, Javier', ('D. Serna', 'S. Fite'))
#('Spanswick, Benjamin', ('K. Mendonsa', 'D.Stroud'))
#('Spanswick, Benjamin', ('M. Pednekar', 'J.Villanueva'))
#('Spanswick, Benjamin', ('B. Yu', 'K. Okiah'))
#('Spanswick, Benjamin', ('B. Benefield', 'M. Pednekar'))
#('Spanswick, Benjamin', ('R. Simhambhatla', 'J. Flores'))
#('Spanswick, Benjamin', ('S. Cocke', 'V. Ahir'))
#('Tanyuk, Olga', ('J. Lin', 'E. Carrera'))
#('Tanyuk, Olga', ('M. Shubbar', 'C. Martinez'))
#('Tanyuk, Olga', ('B. Houssaye ', 'M. Rega'))
#('Tanyuk, Olga', ('J. Knowles', 'A. Schams'))
#('Tanyuk, Olga', ('D.Stroud', 'M. Hightower'))
#('Tanyuk, Olga', ('D. Davieau', 'A. Mohan'))
#('Vasquez, James', ('A. Siddiqui', 'B. Houssaye '))
#('Vasquez, James', ('S. Loftin', 'D. Geislinger'))
#('Vasquez, James', ('S. Fite', 'A. Subramanian'))
#('Vasquez, James', ('A. Schams', 'A. Schams'))
#('Vasquez, James', ('T. Prasad', 'M. Palanisamy'))
#('Vasquez, James', ('M. Hightower', 'J. Lancon    '))
#('Wilke, Benjamin', ('J. Kassof', 'D. Byrne'))
#('Wilke, Benjamin', ('Y. S. Kunwar', 'S.Gozdzialski'))
#('Wilke, Benjamin', ('J. Lancon    ', 'S. Fite'))
#('Wilke, Benjamin', ('A. Subramanian', 'V. Viswanathan'))
#('Wilke, Benjamin', ('R. Bss', 'M. Pednekar'))
#('Wilke, Benjamin', ('A. Veluchamy', 'J. Lancon    '))
#('Wittlin, Nicole', ('M. Pednekar', 'J. Kassof'))
#('Wittlin, Nicole', ('A. Schams', 'G. Lane'))
#('Wittlin, Nicole', ('A. Mohan', 'C. Martinez'))
#('Wittlin, Nicole', ('S. Samuel', 'D. Geislinger'))
#('Wittlin, Nicole', ('E. Carrera', 'M. Shahini'))
#('Wittlin, Nicole', ('S. Milett', 'L. Sterling'))
#('Yi, Joshua', ('V. Viswanathan', 'L. Sterling'))
#('Yi, Joshua', ('S. Samuel', 'J. Heinen'))
#('Yi, Joshua', ('K. Dickens', 'J. Lubich'))
#('Yi, Joshua', ('R. Bss', 'J. Lin'))
#('Yi, Joshua', ('L. Cheng', 'M. Hightower'))
#('Yi, Joshua', ('D.Stroud', 'N. Rezsonya'))


class_b_pairups = zip(cycle(class_b), pairs)



for x in class_b: 
  for y in class_b_pairups:
    if x==y[0]:
      print(y)

#('Coari, Brian', ('A. Mohan', 'S. Chew'))
#('Coari, Brian', ('M. Hightower', 'V. Ahir'))
#('Coari, Brian', ('J. Knowles', 'A. Shen'))
#('Coari, Brian', ('G. Lane', 'M. Palanisamy'))
#('Coari, Brian', ('J. Lingle', 'C. Kim'))
#('Coari, Brian', ('D. Davieau', 'Q.Nixon'))
#('Drake, Carson', ('K. Mendonsa', 'P. Leon'))
#('Drake, Carson', ('A. Schams', 'A. Siddiqui'))
#('Drake, Carson', ('M. Toolin', 'S. Milett'))
#('Drake, Carson', ('J. Lin', 'C. Kim'))
#('Drake, Carson', ('C. Graves', 'C. Kim'))
#('Drake, Carson', ('A. Saxena', 'V. Viswanathan'))
#('Ekedum, Johnson', ('G. Lane', 'D. Serna'))
#('Ekedum, Johnson', ('C. Kim', 'J. Heinen'))
#('Ekedum, Johnson', ('C. Morgan', 'S. Samuel'))
#('Ekedum, Johnson', ('D. Byrne', 'T. Deason'))
#('Ekedum, Johnson', ('R. Nagarajan', 'M. Luzardo'))
#('Ekedum, Johnson', ('D. Byrne', 'M. Shubbar'))
#('Garcia, Martin', ('T. Pompo', 'M. Ahluwalia'))
#('Garcia, Martin', ('D.Stroud', 'J. Lingle'))
#('Garcia, Martin', ('T. Pompo', 'A. Siddiqui'))
#('Garcia, Martin', ('T. Prasad', 'T. Prasad'))
#('Garcia, Martin', ('K. Mendonsa', 'B. Benefield'))
#('Garcia, Martin', ('A. Saxena', 'J. Lancon    '))
#('Garcia de Alford, Solange', ('K. Mendonsa', 'M. Shulyk'))
#('Garcia de Alford, Solange', ('J. Marin', 'A. Shen'))
#('Garcia de Alford, Solange', ('I. Bakhtiar', 'I. Bakhtiar'))
#('Garcia de Alford, Solange', ('J. Marin', 'M. Pednekar'))
#('Garcia de Alford, Solange', ('C. Graves', 'M. Palanisamy'))
#('Garcia de Alford, Solange', ('P. Flaming', 'B. Kimbark'))
#('Gipson, Johnny', ('N. Brown', 'J. Lancon    '))
#('Gipson, Johnny', ('B. Kimbark', 'M. Shulyk'))
#('Gipson, Johnny', ('A. Subramanian', 'R. Nagarajan'))
#('Gipson, Johnny', ('S.Gozdzialski', 'J. Marin'))
#('Gipson, Johnny', ('P. Flaming', 'N. Brown'))
#('Gipson, Johnny', ('A. Veluchamy', 'P. Leon'))
#('Gupta, Nikhil', ('D. Serna', 'R. Bss'))
#('Gupta, Nikhil', ('A. Subramanian', 'N. Rezsonya'))
#('Gupta, Nikhil', ('L. Dajani', 'D. Byrne'))
#('Gupta, Nikhil', ('T. Prasad', 'R. Simhambhatla'))
#('Gupta, Nikhil', ('J. Flores', 'J. Flores'))
#('Gupta, Nikhil', ('D. Serna', 'S. Fite'))
#('Ho, Andy', ('R. Talk', 'N. Brown'))
#('Ho, Andy', ('A. Shen', 'S. Gu'))
#('Ho, Andy', ('T. Prasad', 'A. Siddiqui'))
#('Ho, Andy', ('S. Cocke', 'C. Martinez'))
#('Ho, Andy', ('M. Pednekar', 'V. Ahir'))
#('Ho, Andy', ('S. Cocke', 'V. Ahir'))
#('Hu, Chaoshun', ('M. Pednekar', 'A. Mohan'))
#('Hu, Chaoshun', ('S. Chew', 'P. Leon'))
#('Hu, Chaoshun', ('M. Toolin', 'B. Yu'))
#('Hu, Chaoshun', ('J. Kassof', 'N. Wall'))
#('Hu, Chaoshun', ('R. Simhambhatla', 'J. Flores'))
#('Hu, Chaoshun', ('D. Davieau', 'A. Mohan'))
#('Josephs, David', ('S.Gozdzialski', 'A. Nelson'))
#('Josephs, David', ('K. Mendonsa', 'R. Talk'))
#('Josephs, David', ('M. Kuklani', 'M. Shulyk'))
#('Josephs, David', ('B. Benefield', 'M. Pednekar'))
#('Josephs, David', ('D.Stroud', 'M. Hightower'))
#('Josephs, David', ('M. Hightower', 'J. Lancon    '))
#('Ludlow, Meredith', ('D.Stroud', 'D. Byrne'))
#('Ludlow, Meredith', ('P. Leon', 'Q.Nixon'))
#('Ludlow, Meredith', ('B. Yu', 'K. Okiah'))
#('Ludlow, Meredith', ('J. Knowles', 'A. Schams'))
#('Ludlow, Meredith', ('T. Prasad', 'M. Palanisamy'))
#('Ludlow, Meredith', ('A. Veluchamy', 'J. Lancon    '))
#('Moro, Max', ('A. Nelson', 'M. Luzardo'))
#('Moro, Max', ('M. Pednekar', 'J.Villanueva'))
#('Moro, Max', ('B. Houssaye ', 'M. Rega'))
#('Moro, Max', ('A. Schams', 'A. Schams'))
#('Moro, Max', ('R. Bss', 'M. Pednekar'))
#('Moro, Max', ('S. Milett', 'L. Sterling'))
#('Pafford, Jodi', ('K. Mendonsa', 'D.Stroud'))
#('Pafford, Jodi', ('M. Shubbar', 'C. Martinez'))
#('Pafford, Jodi', ('S. Fite', 'A. Subramanian'))
#('Pafford, Jodi', ('A. Subramanian', 'V. Viswanathan'))
#('Pafford, Jodi', ('E. Carrera', 'M. Shahini'))
#('Pafford, Jodi', ('D.Stroud', 'N. Rezsonya'))
#('Panek, Paul', ('J. Lin', 'E. Carrera'))
#('Panek, Paul', ('S. Loftin', 'D. Geislinger'))
#('Panek, Paul', ('J. Lancon    ', 'S. Fite'))
#('Panek, Paul', ('S. Samuel', 'D. Geislinger'))
#('Panek, Paul', ('L. Cheng', 'M. Hightower'))
#('Panek, Paul', ('D. Serna', 'D. Davieau'))
#('Sprague, Samantha', ('A. Siddiqui', 'B. Houssaye '))
#('Sprague, Samantha', ('Y. S. Kunwar', 'S.Gozdzialski'))
#('Sprague, Samantha', ('A. Mohan', 'C. Martinez'))
#('Sprague, Samantha', ('R. Bss', 'J. Lin'))
#('Sprague, Samantha', ('M. Shubbar', 'J. Kassof'))
#('Sprague, Samantha', ('J. Lancon    ', 'J. Marin'))
#('Trevino, William', ('J. Kassof', 'D. Byrne'))
#('Trevino, William', ('A. Schams', 'G. Lane'))
#('Trevino, William', ('K. Dickens', 'J. Lubich'))
#('Trevino, William', ('M. Luzardo', 'A. Veluchamy'))
#('Trevino, William', ('S. Chew', 'A. Mohan'))
#('Trevino, William', ('A. Nelson', 'A. Siddiqui'))
#('Wilkins, Andrew', ('M. Pednekar', 'J. Kassof'))
#('Wilkins, Andrew', ('S. Samuel', 'J. Heinen'))
#('Wilkins, Andrew', ('M. Kuklani', 'L. Cheng'))
#('Wilkins, Andrew', ('V. Viswanathan', 'J. Lancon    '))
#('Wilkins, Andrew', ('L. Cheng', 'A. Veluchamy'))
#('Wilkins, Andrew', ('D. Byrne', 'S. Chew'))
#('Yeboah, Festus Kwadwo', ('V. Viswanathan', 'L. Sterling'))
#('Yeboah, Festus Kwadwo', ('D. Davieau', 'J. Lancon    '))
#('Yeboah, Festus Kwadwo', ('V. Ahir', 'K. Okiah'))
#('Yeboah, Festus Kwadwo', ('M. Ahluwalia', 'A. Mohan'))
#('Yeboah, Festus Kwadwo', ('D. Serna', 'C. Kim'))
#('Yeboah, Festus Kwadwo', ('J. Lin', 'N. Rezsonya'))
#('Zaheri, Sara', ('A. Saxena', 'D. Byrne'))
#('Zaheri, Sara', ('M. Shubbar', 'K. Thomas'))
#('Zaheri, Sara', ('J. Kassof', 'M. Shubbar'))
#('Zaheri, Sara', ('T. Deason', 'M. Ahluwalia'))
#('Zaheri, Sara', ('D. Byrne', 'M. Kuklani'))
#('Zaheri, Sara', ('A. Schams', 'M. Shubbar'))